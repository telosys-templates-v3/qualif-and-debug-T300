#checkId($entity)

$env.setEntityClassNamePrefix("foo")
#set( $env.entityClassNamePrefix = "Yooo" ) 
entityClassNamePrefix : $env.entityClassNamePrefix

Build values for 12 items ...
#set ( $values = $fn.buildIntValues(8) )
Values size = $values.size() ## size is 12
Values iteration :
#foreach( $v in $values )
 . value = $v
#end
Values by index : 
#set($last = ( $values.size() - 1) )
#foreach ( $i in [0..$last] )
 . value($i) = $values.get($i) 
#end


Build values for each attribute 
#set ( $values = $fn.buildIntValues( $entity.attributes ) )
Key attributes size = $entity.attributes.size()
Values size = $values.size()
#foreach( $v in $values )
 . value = $v
#end

Build values for each key attribute 
#set ( $values = $fn.buildIntValues( $entity.keyAttributes ) )
Key attributes size = $entity.keyAttributes.size()
Values size = $values.size()
#foreach( $v in $values )
 . value = $v
#end

------------------------------------------------
------------------------------------------------
#set( $values = $fn.buildValues($entity.attributes, 1) )
Values size = $values.size()
Attributes size = $entity.attributes.size()
#set ( $b = ($values.size() == $entity.attributes.size()) )
#assertTrue($b, "values.size != attributes.size") 
#foreach( $attribute in $entity.attributes )
Attribute '$attribute.name' :
 . Literal value for attribute $attribute.name : $values.getValue($attribute.name)
 . comparisonStatement with 'foo' variable name : $values.comparisonStatement("foo", $attribute ) 
#end
 All values : $values.allValues

